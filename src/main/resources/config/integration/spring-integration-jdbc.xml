<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
    xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/integration
            http://www.springframework.org/schema/integration/spring-integration.xsd
            http://www.springframework.org/schema/integration/jms
            http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd 
            http://www.springframework.org/schema/integration/jdbc 
            http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd">
<!-- 
Configuration file for harvesting from a DB table using  JDBC.

To execute, specify "jdbc" in the parameter and set the required system configuration.
 -->
	
	<int-jdbc:inbound-channel-adapter query="${jdbc.service.query}"
    channel="servicesIn" data-source="dataSource"
    update="${jdbc.service.update}" />
    
    <poller default="true" max-messages-per-poll="${jdbc.poller.max-messages-per-poll}" receive-timeout="${jdbc.poller.receive-timeout}"
		fixed-delay="${jdbc.poller.fixed-delay}"
		xmlns="http://www.springframework.org/schema/integration">
		<transactional isolation="SERIALIZABLE" />
	</poller>
	
	<int:header-enricher input-channel="servicesIn" output-channel="jdbcIn">
	    <int:header name="type" value="Service"/>	     
	</int:header-enricher>
		
	<int:transformer id="jdbcToJson" input-channel="jdbcIn"
		output-channel="jdbcHarvestChannel" ref="transformationHandler" method="handleJdbc" />
		
	 <int-jms:outbound-channel-adapter id="jmsOut" destination="requestQueue" channel="jdbcHarvestChannel"/> 
	
	<int:channel id="jdbcHarvestChannel">
		<int:interceptors>
			<int:wire-tap channel="jdbcloggingChannel" />
		</int:interceptors>
	</int:channel> 

	<int:logging-channel-adapter id="jdbcloggingChannel"
		expression="'Processing JDBC record of type:' + headers.type" />

	<bean id="transformationHandler"
		class="au.com.redboxresearchdata.harvester.json.transformer.JsonTransformationHandler" />
		
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pw}" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="placeholderProperties" class="au.com.redboxresearchdata.util.config.ConfigSlurperPlaceholderConfigurer">
		<property name="environment" value="#{systemProperties['environment']}"/>
		<property name="defaultEnvironment" value="production" />
		<property name="location" value="#{systemProperties['harvester.client.config.file']}" />
	</bean>			
	
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.url}" />
    </bean>
    <bean id="requestQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="jsonHarvester"/>
	</bean>
</beans>
